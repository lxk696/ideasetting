<application>
  <component name="AppStorage">
    <histories>
      <item value="tenant" />
      <item value="analyzer" />
      <item value="shardingsphere" />
      <item value="Could not determine which parameter to assign generated keys to. Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). Specified key properties are [iitt] and available parameters are [arg0, list, param1, param2]" />
      <item value="Could not determine which parameter to assign generated keys to. Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). Specified key properties are [iitt] and available parameters are [predicate, list, param1, param2]" />
      <item value="Batch" />
      <item value="Prefix must be in canonical form" />
      <item value="The set of profiles for which the annotated component should be registered." />
      <item value="non-compatible bean definition of same name and class" />
      <item value="conflicts with existing" />
      <item value="Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation." />
      <item value="transient" />
      <item value="combine" />
      <item value="null Safe Equals" />
      <item value="In AnnotationAttributes for annotation [org.springframework.context.annotation.Bean] declared on public org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor org.springframework.scheduling.annotation.SchedulingConfiguration.scheduledAnnotationProcessor(), attribute 'name' and its alias 'value' are declared with values of [{org.springframework.context.annotation.internalScheduledAnnotationProcessor}] and [{}], but only one is permitted." />
      <item value="Determine the encoding for the given request. * Can be overridden in subclasses. * &lt;p&gt;The default implementation checks the request encoding, * falling back to the default encoding specified for this resolver." />
      <item value="Thread starvation or clock leap detected (housekeeper delta=1m4s505ms136µs153ns)" />
      <item value="representation" />
      <item value="DOT_" />
      <item value=" Injection" />
      <item value="Repository" />
      <item value="Flush mode for the Redis sessions. The default is {@code ON_SAVE} which only * updates the backing Redis when {@link SessionRepository#save(Session)} is invoked. * In a web environment this happens just before the HTTP response is committed. * &lt;p&gt; * Setting the value to {@code IMMEDIATE} will ensure that the any updates to the * Session are immediately written to the Redis instance. * @return the {@link RedisFlushMode} to use" />
      <item value="Defines a unique namespace for keys. The value is used to isolate sessions by * changing the prefix from default {@code spring:session:} to * {@code &lt;redisNamespace&gt;:}. * &lt;p&gt; * For example, if you had an application named &quot;Application A&quot; that needed to keep * the sessions isolated from &quot;Application B&quot; you could set two different values for * the applications and they could function within the same Redis instance." />
      <item value="Package" />
      <item value="自定义" />
      <item value="Consider any of the following:" />
      <item value="Correct the classpath of your application so that it contains a single, compatible version of javax.validation.BootstrapConfiguration" />
      <item value="The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary" />
      <item value="m Count Down Latch" />
      <item value="set" />
      <item value="ReflectionUtil.getCallerClass will be much slower due to this. java.lang.ClassNotFoundException: sun.reflect.Reflection" />
      <item value="transitive" />
      <item value="transitive dependencies (if any) will not be available, enable debug logging for more details" />
      <item value="mutex" />
      <item value="representing" />
      <item value="Time unit representing one second" />
      <item value="micros" />
      <item value="reserve" />
      <item value="Burst" />
      <item value="time spent sleeping to enforce rate, in seconds; 0.0 if not rate-limited" />
      <item value="Smooth Warming Up" />
      <item value="/ Eagerly load the ContextClosedEvent class to avoid weird classloader issues // on application shutdown in WebLogic 8.1. (Reported by Dustin Woods.)" />
      <item value="Tell the subclass to refresh the internal bean factory." />
      <item value="Last step: publish corresponding event." />
      <item value="Instantiate all remaining (non-lazy-init) singletons." />
      <item value="localization" />
      <item value="persistence" />
      <item value="cancelling" />
      <item value="Consider defining a bean named 'entityManagerFactory' in your configuration." />
      <item value="Module directive expected" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="118" />
        <entry key="ENGLISH" value="119" />
        <entry key="DANISH" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>